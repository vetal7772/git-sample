taskKey="ua.javarush.task.pro.task13.task1313"\n\nStringLinkedList

Настав час познайомитися із двобічно зв&#39;язаним списком. Розв&#39;язуючи цю задачу, ти зрозумієш, як працює двобічно зв&#39;язаний список, і зможеш додавати в нього елементи. У тебе є клас StringLinkedList, який має поля first і last, що вказують, відповідно, на перший та останній елементи.
Тобі потрібно реалізувати логіку методу add, який буде додавати елементи до списку.

Підказки:
1. Для правильної реалізації слід розуміти, що списком можна пересуватися як від першого елемента до останнього, так і в зворотному напрямку. Тому, додаючи нові елементи, не забувай змінювати посилання в сусідніх елементах.
2. Метод add має створювати новий об&#39;єкт класу Node, куди буде записано передане значення. Перш ніж додавати новий вузол, потрібно змінити посилання останнього вузла, вказавши новий вузол, а новий вузол стане останнім.
3. Якщо список містить один елемент, то на нього вказують одночасно і first.next, і last.prev.
4. Метод printAll створено для налагодження (debug), і в перевірці він не використовується.

Важливо!
Поле Node first не повинно містити значення &mdash; воно тільки вказує на перший елемент(first.next);
Node last також не містить значення, а тільки вказує на останній елемент(last.prev).


Требования:
1.	Під час додавання нового елемента попередній елемент має отримувати посилання на нього.
2.	Під час додавання нового елемента він має отримувати посилання на попередній.
3.	Поле first класу StringLinkedList має завжди посилатися на перший елемент, не повинно містити значення (value) і посилання на попередній елемент (prev).
4.	Поле last класу StringLinkedList має завжди посилатися на останній елемент, не повинно містити значення (value) і посилання на наступний елемент (next).


